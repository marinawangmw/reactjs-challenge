"use strict";
(this["webpackJsonpreactjs-challenge-marina"] = this["webpackJsonpreactjs-challenge-marina"] || []).push([[0], { 103: function (e, a, t) { }, 105: function (e, a, t) { }, 106: function (e, a, t) { }, 107: function (e, a, t) { }, 108: function (e, a, t) { }, 109: function (e, a, t) { }, 110: function (e, a, t) { }, 111: function (e, a, t) { }, 112: function (e, a, t) { }, 113: function (e, a, t) { }, 114: function (e, a, t) { }, 115: function (e, a, t) { }, 116: function (e, a, t) { }, 117: function (e, a, t) { }, 118: function (e, a, t) {
            "use strict";
            t.r(a);
            var n = t(0), r = t.n(n), c = t(11), l = t.n(c), i = t(65), o = t.n(i), s = t(73), m = t.n(s), u = t(74), d = t.n(u), p = t(75), E = t.n(p), f = t(153), _ = t(157), g = t(66), b = t(14), v = t(45);
            function h() { var e = Object(g.a)(["", ""]); return h = function () { return e; }, e; }
            var y = new v.a({ uri: "https://rickandmortyapi.com/graphql" }), O = { filterQuery: "", filter: "", collection: [], tipo: "", name: "", fetching: !1, page: 1, totalPages: 0, error: "" }, N = function () { return function (e, a) { e({ type: "SET_FILTER", payload: { filter: "characters", filterQuery: "query($name:String,$type:String, $page:Int) {\n            characters(page:$page,filter:{name:$name, type:$type}){\n             info{\n               pages\n               next\n               prev\n             }\n             results{\n               id\n               name\n               type\n               species\n               gender\n               image\n             }\n           }\n         }" } }), C()(e, a), T()(e, a); }; }, C = function () { return function (e, a) { e({ type: "LIMPIAR_INPUT" }), j()(e, a); }; }, T = function () { return function (e, a) { e({ type: "LIMPIAR_COLLECTION" }), j()(e, a); }; }, j = function () { return function (e, a) { e({ type: "LIMPIAR_ERROR" }); }; }, I = function () { return function (e, a) { var t = a().searcher, n = t.filterQuery, r = t.filter, c = t.page, l = t.name, i = t.tipo; T()(e, a); var o = Object(v.b)(h(), n); return e({ type: "GET_COLLECTION_PENDING" }), y.query({ query: o, variables: { name: l.toLowerCase(), type: i.toLowerCase(), page: c } }).then((function (a) { var t = a.data, n = a.error; n ? e({ type: "GET_COLLECTION_ERROR", payload: n }) : (e({ type: "GET_COLLECTION_SUCCESS", payload: t[r].results }), e({ type: "SET_TOTAL_PAGES", payload: t[r].info.pages })); })).catch((function (a) { e({ type: "GET_COLLECTION_ERROR", payload: a }); })); }; }, L = function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : O, a = arguments.length > 1 ? arguments[1] : void 0; switch (a.type) {
                case "SET_NAME": return Object(b.a)(Object(b.a)({}, e), {}, { name: a.payload });
                case "SET_TYPE": return Object(b.a)(Object(b.a)({}, e), {}, { tipo: a.payload });
                case "SET_FILTER": return Object(b.a)(Object(b.a)({}, e), a.payload);
                case "LIMPIAR_INPUT": return Object(b.a)(Object(b.a)({}, e), {}, { tipo: "", name: "" });
                case "LIMPIAR_COLLECTION": return Object(b.a)(Object(b.a)({}, e), {}, { collection: [], totalPages: 0, page: 1 });
                case "SET_TOTAL_PAGES": return Object(b.a)(Object(b.a)({}, e), {}, { totalPages: a.payload });
                case "SET_CURRENT_PAGE": return Object(b.a)(Object(b.a)({}, e), {}, { page: a.payload });
                case "LIMPIAR_ERROR": return Object(b.a)(Object(b.a)({}, e), {}, { error: "" });
                case "GET_COLLECTION_PENDING": return Object(b.a)(Object(b.a)({}, e), {}, { fetching: !0 });
                case "GET_COLLECTION_ERROR": return Object(b.a)(Object(b.a)({}, e), {}, { fetching: !1, error: a.payload });
                case "GET_COLLECTION_SUCCESS": return Object(b.a)(Object(b.a)({}, e), {}, { fetching: !1, collection: a.payload });
                default: return a;
            } }, S = t(19);
            t(103);
            var A = Object(S.b)((function (e) { return { filter: e.searcher.filter }; }), { setFilterCharactersAction: N, setFilterLocationsAction: function () { return function (e, a) { e({ type: "SET_FILTER", payload: { filter: "locations", filterQuery: "\n            query($name:String,$type:String, $page:Int) {\n                locations(page:$page,filter:{name:$name, type:$type}){\n                    info{\n                        pages\n                        next\n                        prev\n                    }\n                    results{\n                        id\n                        name\n                        dimension\n                        created\n                        residents{\n                            name\n                            image\n                        }\n                    }\n                }\n            }\n        " } }), C()(e, a), T()(e, a); }; }, setFilterEpisodesAction: function () { return function (e, a) { e({ type: "SET_FILTER", payload: { filter: "episodes", filterQuery: "query($name:String, $page:Int) {\n            episodes(page:$page,filter:{name:$name}){\n              info{\n                pages\n                next\n                prev\n              }\n              results{\n                id\n                name\n                air_date\n                episode\n                characters{\n                  name\n                  image\n                }\n                created\n              }\n            }\n          }\n        " } }), C()(e, a), T()(e, a); }; } })((function (e) { var a = e.filter, t = void 0 === a ? "characters" : a, n = e.setFilterCharactersAction, c = e.setFilterLocationsAction, l = e.setFilterEpisodesAction; return r.a.createElement("div", { className: "sidebar" }, r.a.createElement("img", { className: "sidebar__logo", src: o.a, alt: "logo" }), r.a.createElement("p", { className: "sidebar__title" }, "Filters"), r.a.createElement("hr", null), r.a.createElement(f.a, { className: "sidebar__nav", value: t, onChange: function (e, a) { switch (a) {
                    case "characters": return void n();
                    case "locations": return void c();
                    case "episodes": return void l();
                    default: return;
                } }, showLabels: !0 }, r.a.createElement(_.a, { label: "Characters", value: "characters", icon: r.a.createElement(m.a, { className: "sidebarnav__icon" }), className: "sidebarnav__button" }), r.a.createElement(_.a, { label: "Locations", value: "locations", icon: r.a.createElement(d.a, { className: "sidebarnav__icon" }), className: "sidebarnav__button" }), r.a.createElement(_.a, { label: "Episodes", value: "episodes", icon: r.a.createElement(E.a, { className: "sidebarnav__icon" }), className: "sidebarnav__button" }))); })), R = t(33), w = t(34), P = (t(105), t(81)), D = t(158), $ = Object(P.a)({ palette: { primary: { main: "#00a3a6" } } });
            function k() { return { top: "".concat(50, "%"), left: "".concat(50, "%"), transform: "translate(-".concat(50, "%, -").concat(50, "%)") }; }
            var F = Object(D.a)((function (e) { return { paper: { position: "absolute", width: "auto", backgroundColor: e.palette.background.paper, border: "2px solid #000", boxShadow: e.shadows[5], padding: e.spacing(2, 4, 3) } }; })), G = t(166), M = t(159), q = function (e) { var a = e.label, t = e.handleChange, n = e.value, c = Object(w.a)(e, ["label", "handleChange", "value"]); return r.a.createElement("div", { className: "inputField" }, r.a.createElement(M.a, { theme: $ }, r.a.createElement(G.a, Object.assign({ onChange: t, label: a, value: n, id: "outlined-basic", variant: "outlined", size: "small", color: "primary" }, c)))); }, x = (t(106), t(160)), U = function (e) { var a = e.children, t = e.handleClick, n = Object(w.a)(e, ["children", "handleClick"]); return r.a.createElement("div", null, r.a.createElement(M.a, { theme: $ }, r.a.createElement(x.a, Object.assign({ variant: "contained", color: "primary", onClick: t }, n), a))); }, Q = t(78), W = t.n(Q), z = t(79), B = t.n(z), J = (t(107), Object(S.b)((function (e) { return { name: e.searcher.name, tipo: e.searcher.tipo, filter: e.searcher.filter }; }), { setInputNameAction: function (e) { return function (a, t) { a({ type: "SET_NAME", payload: e }); }; }, setInputTypeAction: function (e) { return function (a, t) { a({ type: "SET_TYPE", payload: e }); }; }, limpiarInputAction: C, limpiarCollectionAction: T, getCollectionAction: I })((function (e) { var a = e.name, t = void 0 === a ? "" : a, c = e.tipo, l = void 0 === c ? "" : c, i = e.filter, o = e.setInputNameAction, s = e.setInputTypeAction, m = e.limpiarInputAction, u = e.limpiarCollectionAction, d = e.getCollectionAction, p = Object(n.useState)(!1), E = Object(R.a)(p, 2), f = E[0], _ = E[1]; Object(n.useEffect)((function () { _(!(!t && !l) && (t.length > 2 || l.length > 2)); }), [t, l]); return r.a.createElement("div", { className: "searchForm" }, r.a.createElement("form", { className: "searchForm__form" }, r.a.createElement(q, { label: "Search by name", value: t, handleChange: function (e) { o(e.target.value); } }), r.a.createElement(q, { label: "Search by type", value: l, handleChange: function (e) { s(e.target.value); }, disabled: "episodes" === i }), r.a.createElement(U, { disabled: !f, type: "submit", handleClick: function (e) { e.preventDefault(), d(); } }, r.a.createElement(W.a, null)), r.a.createElement(U, { handleClick: function (e) { e.preventDefault(), m(), u(); } }, r.a.createElement(B.a, null)))); }))), X = t(162), Y = t(163), V = t(161), H = t(168), K = (t(108), function (e) { var a = e.children, t = Object(w.a)(e, ["children"]); return console.log(t), r.a.createElement("div", null, r.a.createElement("div", { className: "modalDetailData" }, r.a.createElement("p", { className: "modalDetailData__subtitle" }, a, " \xa0"), r.a.createElement("p", { className: "modalDetailData__detail" }, t.data ? "".concat(t.data) : "None"))); });
            t(109);
            function Z(e) { var a = e.item, t = a.name, n = a.image, c = a.type, l = a.gender, i = a.species, o = a.dimension, s = a.residents, m = a.episode, u = a.characters, d = a.air_date, p = r.a.useState(k), E = Object(R.a)(p, 1)[0], f = F(); return r.a.createElement("div", { style: E, className: "".concat(f.paper, " modalDetails") }, n && r.a.createElement("img", { className: "modalDetails__img", src: n, alt: "foto detail" }), r.a.createElement(V.a, { className: "modalDetails__name", variant: "h5", component: "h6" }, t), r.a.createElement("div", { className: "modalDetails__data" }, r.a.createElement(K, { data: m ? d : c }, d ? "Release date:" : "Type:"), r.a.createElement(K, { data: l || (o || m) }, l ? "Gender:" : o ? "Dimension:" : "Episode:"), s || u ? r.a.createElement("div", { className: "modalDetails__moreInfo" }, r.a.createElement("p", { className: "modalDetails__subtitle" }, s ? "Residents" : "Characters"), r.a.createElement(ae, { collection: s || u, small: !0 })) : r.a.createElement(K, { data: i }, "Species:"))); }
            t(110);
            var ee = function (e) { var a = e.item, t = e.small, n = a.name, c = a.image, l = a.dimension, i = a.episode, o = r.a.useState(!1), s = Object(R.a)(o, 2), m = s[0], u = s[1]; return r.a.createElement("div", { className: "card" }, r.a.createElement(X.a, { className: "card__card" }, r.a.createElement(Y.a, { onClick: function () { t || u(!0); } }, c ? r.a.createElement("div", { className: "".concat(t && "small", ' "card__withImage"') }, r.a.createElement("img", { className: "card__img", src: c, alt: "foto card" }), r.a.createElement(V.a, { className: "cardwithImage__p", variant: "body2", component: "p" }, n)) : r.a.createElement("div", { className: "card__noImage" }, r.a.createElement(V.a, { variant: "h5", component: "h2" }, n), r.a.createElement(V.a, { variant: "body2", component: "p" }, l || i && i)))), r.a.createElement(H.a, { open: m, onClose: function () { u(!1); }, "aria-labelledby": "simple-modal-title", "aria-describedby": "simple-modal-description" }, r.a.createElement(Z, { item: a }))); }, ae = (t(111), function (e) { var a = e.collection, t = e.small; return r.a.createElement("div", { className: "collection" }, a.length >= 1 && !a[0].name ? r.a.createElement("p", { className: "collection__errorMessage" }, " None ") : a.filter((function (e, a) { return t ? a < 5 : e; })).map((function (e) { return r.a.createElement(ee, { key: e.id, item: e, small: t }); }))); }), te = t(167);
            var ne = Object(S.b)((function (e) { return { pages: e.searcher.totalPages }; }), { setPageAction: function (e) { return function (a, t) { a({ type: "SET_CURRENT_PAGE", payload: e }), I()(a, t); }; } })((function (e) { var a = e.pages, t = e.setPageAction; return r.a.createElement("div", { className: "paginator" }, r.a.createElement(te.a, { count: a, shape: "rounded", size: "large", onChange: function (e, a) { t(a); } })); })), re = (t(112), function (e) { var a = e.children; return r.a.createElement("div", { className: "messageCard" }, r.a.createElement("p", null, " ", a, " ")); }), ce = t(164);
            t(113);
            var le = Object(S.b)((function (e) { return { collection: e.searcher.collection, error: e.searcher.error, fetching: e.searcher.fetching }; }))((function (e) { var a = e.collection, t = e.error, n = void 0 !== t && t, c = e.fetching, l = void 0 !== c && c; return r.a.createElement("div", { className: "body" }, r.a.createElement("div", { className: "body__header" }, r.a.createElement(J, null)), r.a.createElement("div", { className: "body__container" }, l || n ? r.a.createElement(re, { message: l || n }, l ? r.a.createElement(ce.a, { className: "body__progress" }) : "No data found...") : r.a.createElement(ae, { collection: a })), r.a.createElement("div", { className: "body__pagination" }, r.a.createElement(ne, null))); })), ie = (t(114), function () { var e = (new Date).toLocaleDateString(); return r.a.createElement("div", { className: "footer" }, r.a.createElement("div", { className: "footer__name" }, r.a.createElement("p", null, "Marina Wang")), r.a.createElement("div", { className: "footer__date" }, r.a.createElement("p", null, e))); }), oe = (t(115), function () { return r.a.createElement("div", { className: "homepage" }, r.a.createElement("div", { className: "homepage__body" }, r.a.createElement(A, null), r.a.createElement(le, null)), r.a.createElement(ie, null)); });
            t(116);
            var se = function () { return r.a.createElement("div", { className: "App" }, r.a.createElement(oe, null)); }, me = t(28), ue = t(80), de = Object(me.c)({ searcher: L }), pe = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || me.d;
            var Ee = t(165);
            Boolean("localhost" === window.location.hostname || "[::1]" === window.location.hostname || window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));
            t(117);
            var fe = function () { var e = Object(me.e)(de, pe(Object(me.a)(ue.a))); return N()(e.dispatch), e; }(), _e = new v.a({ uri: "https://rickandmortyapi.com/graphql/" });
            l.a.render(r.a.createElement(r.a.StrictMode, null, r.a.createElement(Ee.a, { client: _e }, r.a.createElement(S.a, { store: fe }, r.a.createElement(se, null)))), document.getElementById("root")), "serviceWorker" in navigator && navigator.serviceWorker.ready.then((function (e) { e.unregister(); })).catch((function (e) { console.error(e.message); }));
        }, 65: function (e, a, t) { e.exports = t.p + "static/media/RickAndMorty.47611180.png"; }, 92: function (e, a, t) { e.exports = t(118); } }, [[92, 1, 2]]]);
//# sourceMappingURL=main.fdf317be.chunk.js.map
