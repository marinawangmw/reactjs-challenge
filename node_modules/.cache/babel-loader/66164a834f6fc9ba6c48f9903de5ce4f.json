{"ast":null,"code":"import _taggedTemplateLiteral from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _queries;function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    \",\"\\n  \"]);_templateObject=function _templateObject(){return data;};return data;}import ApolloClient,{gql}from\"apollo-boost\";import{CLEAR_COLLECTION,CLEAR_ERROR,CLEAR_INPUT,Filter,GET_COLLECTION_ERROR,GET_COLLECTION_PENDING,GET_COLLECTION_SUCCESS,SET_CURRENT_PAGE,SET_FILTER,SET_NAME,SET_TOTAL_PAGES,SET_TYPE}from\"./reduxTypes\";var client=new ApolloClient({uri:\"https://rickandmortyapi.com/graphql\"});// GraphQL Queries\nvar queries=(_queries={},_defineProperty(_queries,Filter.characters,\"\\n        query($name:String,$type:String, $page:Int) {\\n            characters(page:$page,filter:{name:$name, type:$type}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    type\\n                    species\\n                    gender\\n                    image\\n                }\\n            }\\n        }\"),_defineProperty(_queries,Filter.locations,\"\\n        query($name:String,$type:String, $page:Int) {\\n            locations(page:$page,filter:{name:$name, type:$type}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    dimension\\n                    residents{\\n                        name\\n                        image\\n                    }\\n                }\\n            }\\n        }\"),_defineProperty(_queries,Filter.episodes,\"\\n        query($name:String, $page:Int) {\\n            episodes(page:$page,filter:{name:$name}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    air_date\\n                    episode\\n                    characters{\\n                    name\\n                    image\\n                    }\\n                }\\n            }\\n        }\"),_queries);// STATES\nvar initialData={filterQuery:\"\",filter:Filter.characters,collection:[],inputType:\"\",inputName:\"\",fetching:false,error:false,page:1,totalPages:0};// REDUCER\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialData;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_FILTER:return _objectSpread(_objectSpread({},state),action.payload);case SET_NAME:return _objectSpread(_objectSpread({},state),{},{inputName:action.payload});case SET_TYPE:return _objectSpread(_objectSpread({},state),{},{inputType:action.payload});case CLEAR_INPUT:return _objectSpread(_objectSpread({},state),{},{inputType:\"\",inputName:\"\"});case CLEAR_COLLECTION:return _objectSpread(_objectSpread({},state),{},{collection:[],totalPages:0});case CLEAR_ERROR:return _objectSpread(_objectSpread({},state),{},{error:false});case SET_TOTAL_PAGES:return _objectSpread(_objectSpread({},state),{},{totalPages:action.payload});case SET_CURRENT_PAGE:return _objectSpread(_objectSpread({},state),{},{page:action.payload});case GET_COLLECTION_PENDING:return _objectSpread(_objectSpread({},state),{},{fetching:true});case GET_COLLECTION_SUCCESS:return _objectSpread(_objectSpread({},state),{},{fetching:false,collection:action.payload});case GET_COLLECTION_ERROR:return _objectSpread(_objectSpread({},state),{},{fetching:false,error:action.payload});default:return action;}};// ACTIONS\nexport var setFilterAction=function setFilterAction(filterType){return function(dispatch){dispatch({type:SET_FILTER,payload:{filter:filterType,filterQuery:queries[filterType]}});dispatch(clearInputAction());dispatch(clearCollectionAction());dispatch(setPageAction(1));};};export var setInputNameAction=function setInputNameAction(inputName){return function(dispatch){dispatch({type:SET_NAME,payload:inputName});};};export var setInputTypeAction=function setInputTypeAction(inputType){return function(dispatch){dispatch({type:SET_TYPE,payload:inputType});};};export var clearInputAction=function clearInputAction(){return function(dispatch){dispatch({type:CLEAR_INPUT});};};export var clearCollectionAction=function clearCollectionAction(){return function(dispatch){dispatch({type:CLEAR_COLLECTION});dispatch(clearErrorAction());};};export var clearErrorAction=function clearErrorAction(){return function(dispatch){dispatch({type:CLEAR_ERROR});};};export var setPageAction=function setPageAction(page){return function(dispatch){dispatch({type:SET_CURRENT_PAGE,payload:page});};};export var getCollectionAction=function getCollectionAction(){return function(dispatch,getState){var _getState$searcher=getState().searcher,filterQuery=_getState$searcher.filterQuery,filter=_getState$searcher.filter,page=_getState$searcher.page,inputName=_getState$searcher.inputName,inputType=_getState$searcher.inputType;dispatch(clearCollectionAction());var query=gql(_templateObject(),filterQuery);dispatch({type:GET_COLLECTION_PENDING});return client.query({query:query,variables:{name:inputName.toLowerCase(),type:inputType.toLowerCase(),page:page}}).then(function(_ref){var data=_ref.data;dispatch({type:GET_COLLECTION_SUCCESS,payload:data[filter].results});dispatch({type:SET_TOTAL_PAGES,payload:data[filter].info.pages});}).catch(function(error){dispatch({type:GET_COLLECTION_ERROR,payload:error});});};};export default reducer;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/redux/searcherDuck.ts"],"names":["ApolloClient","gql","CLEAR_COLLECTION","CLEAR_ERROR","CLEAR_INPUT","Filter","GET_COLLECTION_ERROR","GET_COLLECTION_PENDING","GET_COLLECTION_SUCCESS","SET_CURRENT_PAGE","SET_FILTER","SET_NAME","SET_TOTAL_PAGES","SET_TYPE","client","uri","queries","characters","locations","episodes","initialData","filterQuery","filter","collection","inputType","inputName","fetching","error","page","totalPages","reducer","state","action","type","payload","setFilterAction","filterType","dispatch","clearInputAction","clearCollectionAction","setPageAction","setInputNameAction","setInputTypeAction","clearErrorAction","getCollectionAction","getState","searcher","query","variables","name","toLowerCase","then","data","results","info","pages","catch"],"mappings":"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","sourcesContent":["import ApolloClient, { gql } from \"apollo-boost\";\r\nimport { Reducer } from \"redux\";\r\nimport {\r\n  AppThunk,\r\n  CLEAR_COLLECTION,\r\n  CLEAR_ERROR,\r\n  CLEAR_INPUT,\r\n  Filter,\r\n  GET_COLLECTION_ERROR,\r\n  GET_COLLECTION_PENDING,\r\n  GET_COLLECTION_SUCCESS,\r\n  SearcherActionTypes,\r\n  SearcherState,\r\n  SET_CURRENT_PAGE,\r\n  SET_FILTER,\r\n  SET_NAME,\r\n  SET_TOTAL_PAGES,\r\n  SET_TYPE,\r\n} from \"./reduxTypes\";\r\n\r\nlet client = new ApolloClient({\r\n  uri: \"https://rickandmortyapi.com/graphql\",\r\n});\r\n\r\n// GraphQL Queries\r\nconst queries = {\r\n  [Filter.characters]: `\r\n        query($name:String,$type:String, $page:Int) {\r\n            characters(page:$page,filter:{name:$name, type:$type}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    type\r\n                    species\r\n                    gender\r\n                    image\r\n                }\r\n            }\r\n        }`,\r\n\r\n  [Filter.locations]: `\r\n        query($name:String,$type:String, $page:Int) {\r\n            locations(page:$page,filter:{name:$name, type:$type}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    dimension\r\n                    residents{\r\n                        name\r\n                        image\r\n                    }\r\n                }\r\n            }\r\n        }`,\r\n\r\n  [Filter.episodes]: `\r\n        query($name:String, $page:Int) {\r\n            episodes(page:$page,filter:{name:$name}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    air_date\r\n                    episode\r\n                    characters{\r\n                    name\r\n                    image\r\n                    }\r\n                }\r\n            }\r\n        }`,\r\n};\r\n\r\n// STATES\r\nconst initialData = {\r\n  filterQuery: \"\",\r\n  filter: Filter.characters,\r\n  collection: [],\r\n  inputType: \"\",\r\n  inputName: \"\",\r\n  fetching: false,\r\n  error: false,\r\n  page: 1,\r\n  totalPages: 0,\r\n};\r\n\r\n// REDUCER\r\nconst reducer: Reducer<SearcherState> = (\r\n  state = initialData,\r\n  action: SearcherActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return { ...state, ...action.payload };\r\n    case SET_NAME:\r\n      return { ...state, inputName: action.payload };\r\n    case SET_TYPE:\r\n      return { ...state, inputType: action.payload };\r\n    case CLEAR_INPUT:\r\n      return { ...state, inputType: \"\", inputName: \"\" };\r\n    case CLEAR_COLLECTION:\r\n      return { ...state, collection: [], totalPages: 0 };\r\n    case CLEAR_ERROR:\r\n      return { ...state, error: false };\r\n    case SET_TOTAL_PAGES:\r\n      return { ...state, totalPages: action.payload };\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, page: action.payload };\r\n    case GET_COLLECTION_PENDING:\r\n      return { ...state, fetching: true };\r\n    case GET_COLLECTION_SUCCESS:\r\n      return { ...state, fetching: false, collection: action.payload };\r\n    case GET_COLLECTION_ERROR:\r\n      return { ...state, fetching: false, error: action.payload };\r\n    default:\r\n      return action;\r\n  }\r\n};\r\n\r\n// ACTIONS\r\nexport const setFilterAction: AppThunk = (filterType: Filter) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_FILTER,\r\n    payload: {\r\n      filter: filterType,\r\n      filterQuery: queries[filterType as keyof typeof queries],\r\n    },\r\n  });\r\n\r\n  dispatch(clearInputAction());\r\n\r\n  dispatch(clearCollectionAction());\r\n\r\n  dispatch(setPageAction(1));\r\n};\r\n\r\nexport const setInputNameAction: AppThunk = (inputName: string) => (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: SET_NAME,\r\n    payload: inputName,\r\n  });\r\n};\r\n\r\nexport const setInputTypeAction: AppThunk = (inputType: string) => (\r\n  dispatch\r\n) => {\r\n  dispatch({\r\n    type: SET_TYPE,\r\n    payload: inputType,\r\n  });\r\n};\r\n\r\nexport const clearInputAction: AppThunk = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_INPUT,\r\n  });\r\n};\r\n\r\nexport const clearCollectionAction: AppThunk = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_COLLECTION,\r\n  });\r\n\r\n  dispatch(clearErrorAction());\r\n};\r\n\r\nexport const clearErrorAction: AppThunk = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERROR,\r\n  });\r\n};\r\n\r\nexport const setPageAction: AppThunk = (page: number) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_CURRENT_PAGE,\r\n    payload: page,\r\n  });\r\n};\r\n\r\nexport const getCollectionAction: AppThunk = () => (dispatch, getState) => {\r\n  const {\r\n    filterQuery,\r\n    filter,\r\n    page,\r\n    inputName,\r\n    inputType,\r\n  } = getState().searcher;\r\n\r\n  dispatch(clearCollectionAction());\r\n\r\n  const query = gql`\r\n    ${filterQuery}\r\n  `;\r\n\r\n  dispatch({\r\n    type: GET_COLLECTION_PENDING,\r\n  });\r\n\r\n  return client\r\n    .query({\r\n      query,\r\n      variables: {\r\n        name: inputName!.toLowerCase(),\r\n        type: inputType!.toLowerCase(),\r\n        page: page,\r\n      },\r\n    })\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: GET_COLLECTION_SUCCESS,\r\n        payload: data[filter!].results,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_TOTAL_PAGES,\r\n        payload: data[filter!].info.pages,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_COLLECTION_ERROR,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}