{"ast":null,"code":"export let Filter; // export interface Characters {\n// \tid?: number;\n// \tname: string;\n// \ttype?: string;\n// \tspecies?: string;\n// \tgender?: string;\n// \timage: string;\n// }\n// export interface Locations {\n// \tid: number;\n// \tname: string;\n// \ttype: string;\n// \tdimension: string;\n// \tresidents: { name: string; image: string }[];\n// }\n// export interface Episodes {\n// \tid: number;\n// \tname: string;\n// \tair_date: Date;\n// \tepisode: string;\n// \tcharacters: { name: string; image: string }[];\n// }\n\n(function (Filter) {\n  Filter[\"characters\"] = \"characters\";\n  Filter[\"locations\"] = \"locations\";\n  Filter[\"episodes\"] = \"episodes\";\n})(Filter || (Filter = {}));\n\nclass Item {\n  draw() {}\n\n}\n\nclass Episode extends Item {\n  constructor(id, name, type, species, gender, image) {\n    super();\n    this.id = void 0;\n    this.name = void 0;\n    this.type = void 0;\n    this.species = void 0;\n    this.gender = void 0;\n    this.image = void 0;\n    this.id = id;\n    this.name = name;\n    this.type = type;\n    this.species = species;\n    this.gender = gender;\n    this.image = image;\n  }\n\n  draw() {}\n\n}\n\nclass Character extends Item {\n  constructor(id, name, type, species, gender, image) {\n    super();\n    this.id = void 0;\n    this.name = void 0;\n    this.type = void 0;\n    this.species = void 0;\n    this.gender = void 0;\n    this.image = void 0;\n    this.id = id;\n    this.name = name;\n    this.type = type;\n    this.species = species;\n    this.gender = gender;\n    this.image = image;\n  }\n\n  draw() {}\n\n}\n\nclass Location extends Item {\n  draw() {}\n\n}\n\n// CONSTANTS\nexport const SET_FILTER = \"SET_FILTER\";\nexport const SET_NAME = \"SET_NAME\";\nexport const SET_TYPE = \"SET_TYPE\";\nexport const CLEAR_INPUT = \"CLEAR_INPUT\";\nexport const CLEAR_COLLECTION = \"CLEAR_COLLECTION\";\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\";\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nexport const GET_COLLECTION_PENDING = \"GET_COLLECTION_PENDING\";\nexport const GET_COLLECTION_SUCCESS = \"GET_COLLECTION_SUCCESS\";\nexport const GET_COLLECTION_ERROR = \"GET_COLLECTION_ERROR\"; // ACTIONS TYPE","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/redux/reduxTypes.ts"],"names":["Filter","Item","draw","Episode","constructor","id","name","type","species","gender","image","Character","Location","SET_FILTER","SET_NAME","SET_TYPE","CLEAR_INPUT","CLEAR_COLLECTION","CLEAR_ERROR","SET_TOTAL_PAGES","SET_CURRENT_PAGE","GET_COLLECTION_PENDING","GET_COLLECTION_SUCCESS","GET_COLLECTION_ERROR"],"mappings":"AAIA,WAAYA,MAAZ,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;WA7BYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AA+BZ,MAAMC,IAAN,CAAW;AACVC,EAAAA,IAAI,GAAG,CAAE;;AADC;;AAIX,MAAMC,OAAN,SAAsBF,IAAtB,CAA2B;AAQ1BG,EAAAA,WAAW,CACVC,EADU,EAEVC,IAFU,EAGVC,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,KANU,EAOT;AACD;AADC,SAdFL,EAcE;AAAA,SAbFC,IAaE;AAAA,SAZFC,IAYE;AAAA,SAXFC,OAWE;AAAA,SAVFC,MAUE;AAAA,SATFC,KASE;AAED,SAAKL,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;;AACDR,EAAAA,IAAI,GAAG,CAAE;;AAxBiB;;AA2B3B,MAAMS,SAAN,SAAwBV,IAAxB,CAA6B;AAQ5BG,EAAAA,WAAW,CACVC,EADU,EAEVC,IAFU,EAGVC,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,KANU,EAOT;AACD;AADC,SAdFL,EAcE;AAAA,SAbFC,IAaE;AAAA,SAZFC,IAYE;AAAA,SAXFC,OAWE;AAAA,SAVFC,MAUE;AAAA,SATFC,KASE;AAED,SAAKL,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;;AAEDR,EAAAA,IAAI,GAAG,CAAE;;AAzBmB;;AA2B7B,MAAMU,QAAN,SAAuBX,IAAvB,CAA4B;AAC3BC,EAAAA,IAAI,GAAG,CAAE;;AADkB;;AAwB5B;AACA,OAAO,MAAMW,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B,C,CAEP","sourcesContent":["import { Action, ActionCreator } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport enum Filter {\r\n\tcharacters = \"characters\",\r\n\tlocations = \"locations\",\r\n\tepisodes = \"episodes\",\r\n}\r\n\r\n// export interface Characters {\r\n// \tid?: number;\r\n// \tname: string;\r\n// \ttype?: string;\r\n// \tspecies?: string;\r\n// \tgender?: string;\r\n// \timage: string;\r\n// }\r\n\r\n// export interface Locations {\r\n// \tid: number;\r\n// \tname: string;\r\n// \ttype: string;\r\n// \tdimension: string;\r\n// \tresidents: { name: string; image: string }[];\r\n// }\r\n\r\n// export interface Episodes {\r\n// \tid: number;\r\n// \tname: string;\r\n// \tair_date: Date;\r\n// \tepisode: string;\r\n// \tcharacters: { name: string; image: string }[];\r\n// }\r\n\r\nclass Item {\r\n\tdraw() {}\r\n}\r\n\r\nclass Episode extends Item {\r\n\tid: number;\r\n\tname: string;\r\n\ttype: string;\r\n\tspecies: string;\r\n\tgender: string;\r\n\timage: string;\r\n\r\n\tconstructor(\r\n\t\tid: number,\r\n\t\tname: string,\r\n\t\ttype: string,\r\n\t\tspecies: string,\r\n\t\tgender: string,\r\n\t\timage: string\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.species = species;\r\n\t\tthis.gender = gender;\r\n\t\tthis.image = image;\r\n\t}\r\n\tdraw() {}\r\n}\r\n\r\nclass Character extends Item {\r\n\tid: number;\r\n\tname: string;\r\n\ttype: string;\r\n\tspecies: string;\r\n\tgender: string;\r\n\timage: string;\r\n\r\n\tconstructor(\r\n\t\tid: number,\r\n\t\tname: string,\r\n\t\ttype: string,\r\n\t\tspecies: string,\r\n\t\tgender: string,\r\n\t\timage: string\r\n\t) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.species = species;\r\n\t\tthis.gender = gender;\r\n\t\tthis.image = image;\r\n\t}\r\n\r\n\tdraw() {}\r\n}\r\nclass Location extends Item {\r\n\tdraw() {}\r\n}\r\n\r\nexport type Data = Item;\r\n\r\nexport interface Collection {\r\n\t[Filter.characters]: Characters[];\r\n\t[Filter.locations]: Locations[];\r\n\t[Filter.episodes]: Episodes[];\r\n}\r\n\r\nexport interface SearcherState {\r\n\tfilterQuery?: string;\r\n\tfilter?: Filter;\r\n\tcollection?: Collection;\r\n\tinputType?: string;\r\n\tinputName?: string;\r\n\tfetching?: boolean;\r\n\terror?: boolean;\r\n\tpage?: number;\r\n\ttotalPages?: number;\r\n}\r\n\r\n// CONSTANTS\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const SET_NAME = \"SET_NAME\";\r\nexport const SET_TYPE = \"SET_TYPE\";\r\nexport const CLEAR_INPUT = \"CLEAR_INPUT\";\r\nexport const CLEAR_COLLECTION = \"CLEAR_COLLECTION\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\nexport const SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const GET_COLLECTION_PENDING = \"GET_COLLECTION_PENDING\";\r\nexport const GET_COLLECTION_SUCCESS = \"GET_COLLECTION_SUCCESS\";\r\nexport const GET_COLLECTION_ERROR = \"GET_COLLECTION_ERROR\";\r\n\r\n// ACTIONS TYPE\r\ninterface SetFilterAction {\r\n\ttype: typeof SET_FILTER;\r\n\tpayload: { filter: Filter; filterQuery: string };\r\n}\r\n\r\ninterface SetInputAction {\r\n\ttype: typeof SET_NAME | typeof SET_TYPE;\r\n\tpayload: string;\r\n}\r\n\r\ninterface ClearStateAction {\r\n\ttype: typeof CLEAR_INPUT | typeof CLEAR_COLLECTION | typeof CLEAR_ERROR;\r\n}\r\n\r\ninterface PaginatorAction {\r\n\ttype: typeof SET_TOTAL_PAGES | typeof SET_CURRENT_PAGE;\r\n\tpayload: number;\r\n}\r\n\r\ninterface GetDataActionSuccess {\r\n\ttype: typeof GET_COLLECTION_SUCCESS;\r\n\tpayload: Collection;\r\n}\r\n\r\ninterface GetDataActionPendingOrError {\r\n\ttype: typeof GET_COLLECTION_PENDING | typeof GET_COLLECTION_ERROR;\r\n\tpayload: boolean;\r\n}\r\n\r\nexport type SearcherActionTypes =\r\n\t| SetFilterAction\r\n\t| SetInputAction\r\n\t| ClearStateAction\r\n\t| PaginatorAction\r\n\t| GetDataActionSuccess\r\n\t| GetDataActionPendingOrError;\r\n\r\nexport type AppThunk = ActionCreator<\r\n\tThunkAction<void, RootState, null, Action<string>>\r\n>;\r\n"]},"metadata":{},"sourceType":"module"}