{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\src\\\\components\\\\cardItem\\\\CardItem.tsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Filter } from \"../../redux/reduxTypes\";\nimport ModalDetails from \"../modalDetails/ModalDetails\";\nimport \"./CardItem.css\";\n\nconst CardItem = ({\n  item,\n  small\n}) => {\n  const filter = useSelector(state => state.searcher.activeFilter);\n  const {\n    name\n  } = item;\n  let image,\n      description = \"\";\n  const [open, setOpen] = React.useState(false);\n\n  switch (filter) {\n    case Filter.characters:\n      image = item.image;\n      break;\n\n    case Filter.locations:\n      description = item.dimension;\n      break;\n\n    case Filter.episodes:\n      description = item.episode;\n      break;\n\n    default:\n      break;\n  }\n\n  const handleOpen = () => {\n    if (!small) {\n      setOpen(true);\n      return;\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: `\"card__card\" ${small && \"noTransition\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `${small && \"small\"} \"card__withImage\"`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card__img\",\n    src: image,\n    alt: \"foto card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"cardwithImage__p\",\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, name)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card__noImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }, description)))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ModalDetails, Object.assign({}, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default CardItem;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/components/cardItem/CardItem.tsx"],"names":["Card","CardContent","Modal","Typography","React","useSelector","Filter","ModalDetails","CardItem","item","small","filter","state","searcher","activeFilter","name","image","description","open","setOpen","useState","characters","locations","dimension","episodes","episode","handleOpen","handleClose"],"mappings":"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","sourcesContent":["import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n\tCharacters,\r\n\tEpisodes,\r\n\tFilter,\r\n\tLocations,\r\n} from \"../../redux/reduxTypes\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport ModalDetails from \"../modalDetails/ModalDetails\";\r\nimport \"./CardItem.css\";\r\n\r\ninterface CardItemProps {\r\n\titem: Characters | Locations | Episodes;\r\n\tsmall: boolean;\r\n}\r\n\r\nconst CardItem: React.FC<CardItemProps> = ({ item, small }) => {\r\n\tconst filter = useSelector((state: RootState) => state.searcher.activeFilter);\r\n\tconst { name } = item;\r\n\tlet image,\r\n\t\tdescription = \"\";\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tswitch (filter) {\r\n\t\tcase Filter.characters:\r\n\t\t\timage = (item as Characters).image;\r\n\t\t\tbreak;\r\n\t\tcase Filter.locations:\r\n\t\t\tdescription = (item as Locations).dimension;\r\n\t\t\tbreak;\r\n\t\tcase Filter.episodes:\r\n\t\t\tdescription = (item as Episodes).episode;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tconst handleOpen = () => {\r\n\t\tif (!small) {\r\n\t\t\tsetOpen(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<Card className={`\"card__card\" ${small && \"noTransition\"}`}>\r\n\t\t\t\t<CardContent onClick={handleOpen}>\r\n\t\t\t\t\t{image ? (\r\n\t\t\t\t\t\t<div className={`${small && \"small\"} \"card__withImage\"`}>\r\n\t\t\t\t\t\t\t<img className=\"card__img\" src={image} alt=\"foto card\" />\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tclassName=\"cardwithImage__p\"\r\n\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\tcomponent=\"p\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"card__noImage\">\r\n\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\taria-labelledby=\"simple-modal-title\"\r\n\t\t\t\taria-describedby=\"simple-modal-description\"\r\n\t\t\t>\r\n\t\t\t\t{<ModalDetails {...item} />}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardItem;\r\n"]},"metadata":{},"sourceType":"module"}