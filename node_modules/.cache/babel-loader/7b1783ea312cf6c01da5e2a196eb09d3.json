{"ast":null,"code":"import { queries } from \"../../services/apollo\";\nimport { CLEAR_COLLECTION, CLEAR_ERROR, CLEAR_INPUT, Filter, GET_COLLECTION_ERROR, GET_COLLECTION_PENDING, GET_COLLECTION_SUCCESS, SET_CURRENT_PAGE, SET_FILTER, SET_NAME, SET_TOTAL_PAGES, SET_TYPE } from \"./searcher.types\"; // Initial State\n\nconst initialFilterState = {\n  collection: [],\n  inputType: \"\",\n  inputName: \"\",\n  fetching: false,\n  error: false,\n  page: 1,\n  totalPages: 0\n};\nconst initialData = {\n  activeFilter: Filter.characters,\n  [Filter.characters]: { ...initialFilterState,\n    filterQuery: queries.characters\n  },\n  [Filter.locations]: { ...initialFilterState,\n    filterQuery: queries.locations\n  },\n  [Filter.episodes]: { ...initialFilterState,\n    filterQuery: queries.episodes\n  }\n}; // REDUCER\n\nconst reducer = (state = initialData, action) => {\n  switch (action.type) {\n    case SET_FILTER:\n    case SET_NAME:\n    case SET_TYPE:\n    case CLEAR_INPUT:\n    case CLEAR_COLLECTION:\n    case CLEAR_ERROR:\n    case SET_TOTAL_PAGES:\n    case SET_CURRENT_PAGE:\n    case GET_COLLECTION_PENDING:\n    case GET_COLLECTION_SUCCESS:\n    case GET_COLLECTION_ERROR:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return action;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/redux/searcher/searcher.reducer.ts"],"names":["queries","CLEAR_COLLECTION","CLEAR_ERROR","CLEAR_INPUT","Filter","GET_COLLECTION_ERROR","GET_COLLECTION_PENDING","GET_COLLECTION_SUCCESS","SET_CURRENT_PAGE","SET_FILTER","SET_NAME","SET_TOTAL_PAGES","SET_TYPE","initialFilterState","collection","inputType","inputName","fetching","error","page","totalPages","initialData","activeFilter","characters","filterQuery","locations","episodes","reducer","state","action","type","payload"],"mappings":"AACA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SACCC,gBADD,EAECC,WAFD,EAGCC,WAHD,EAICC,MAJD,EAMCC,oBAND,EAOCC,sBAPD,EAQCC,sBARD,EAUCC,gBAVD,EAWCC,UAXD,EAYCC,QAZD,EAaCC,eAbD,EAcCC,QAdD,QAeO,kBAfP,C,CAiBA;;AACA,MAAMC,kBAA+B,GAAG;AACvCC,EAAAA,UAAU,EAAE,EAD2B;AAEvCC,EAAAA,SAAS,EAAE,EAF4B;AAGvCC,EAAAA,SAAS,EAAE,EAH4B;AAIvCC,EAAAA,QAAQ,EAAE,KAJ6B;AAKvCC,EAAAA,KAAK,EAAE,KALgC;AAMvCC,EAAAA,IAAI,EAAE,CANiC;AAOvCC,EAAAA,UAAU,EAAE;AAP2B,CAAxC;AAUA,MAAMC,WAA0B,GAAG;AAClCC,EAAAA,YAAY,EAAElB,MAAM,CAACmB,UADa;AAElC,GAACnB,MAAM,CAACmB,UAAR,GAAqB,EACpB,GAAGV,kBADiB;AAEpBW,IAAAA,WAAW,EAAExB,OAAO,CAACuB;AAFD,GAFa;AAMlC,GAACnB,MAAM,CAACqB,SAAR,GAAoB,EACnB,GAAGZ,kBADgB;AAEnBW,IAAAA,WAAW,EAAExB,OAAO,CAACyB;AAFF,GANc;AAUlC,GAACrB,MAAM,CAACsB,QAAR,GAAmB,EAClB,GAAGb,kBADe;AAElBW,IAAAA,WAAW,EAAExB,OAAO,CAAC0B;AAFH;AAVe,CAAnC,C,CAgBA;;AACA,MAAMC,OAA+B,GAAG,CAACC,KAAK,GAAGP,WAAT,EAAsBQ,MAAtB,KAAiC;AACxE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKrB,UAAL;AACA,SAAKC,QAAL;AACA,SAAKE,QAAL;AACA,SAAKT,WAAL;AACA,SAAKF,gBAAL;AACA,SAAKC,WAAL;AACA,SAAKS,eAAL;AACA,SAAKH,gBAAL;AACA,SAAKF,sBAAL;AACA,SAAKC,sBAAL;AACA,SAAKF,oBAAL;AACC,aAAO,EAAE,GAAGuB,KAAL;AAAY,WAAGC,MAAM,CAACE;AAAtB,OAAP;;AACD;AACC,aAAOF,MAAP;AAdF;AAgBA,CAjBD;;AAmBA,eAAeF,OAAf","sourcesContent":["import { Reducer } from \"redux\";\r\nimport { queries } from \"../../services/apollo\";\r\nimport {\r\n\tCLEAR_COLLECTION,\r\n\tCLEAR_ERROR,\r\n\tCLEAR_INPUT,\r\n\tFilter,\r\n\tFilterState,\r\n\tGET_COLLECTION_ERROR,\r\n\tGET_COLLECTION_PENDING,\r\n\tGET_COLLECTION_SUCCESS,\r\n\tSearcherState,\r\n\tSET_CURRENT_PAGE,\r\n\tSET_FILTER,\r\n\tSET_NAME,\r\n\tSET_TOTAL_PAGES,\r\n\tSET_TYPE,\r\n} from \"./searcher.types\";\r\n\r\n// Initial State\r\nconst initialFilterState: FilterState = {\r\n\tcollection: [],\r\n\tinputType: \"\",\r\n\tinputName: \"\",\r\n\tfetching: false,\r\n\terror: false,\r\n\tpage: 1,\r\n\ttotalPages: 0,\r\n};\r\n\r\nconst initialData: SearcherState = {\r\n\tactiveFilter: Filter.characters,\r\n\t[Filter.characters]: {\r\n\t\t...initialFilterState,\r\n\t\tfilterQuery: queries.characters,\r\n\t},\r\n\t[Filter.locations]: {\r\n\t\t...initialFilterState,\r\n\t\tfilterQuery: queries.locations,\r\n\t},\r\n\t[Filter.episodes]: {\r\n\t\t...initialFilterState,\r\n\t\tfilterQuery: queries.episodes,\r\n\t},\r\n};\r\n\r\n// REDUCER\r\nconst reducer: Reducer<SearcherState> = (state = initialData, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_FILTER:\r\n\t\tcase SET_NAME:\r\n\t\tcase SET_TYPE:\r\n\t\tcase CLEAR_INPUT:\r\n\t\tcase CLEAR_COLLECTION:\r\n\t\tcase CLEAR_ERROR:\r\n\t\tcase SET_TOTAL_PAGES:\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\tcase GET_COLLECTION_PENDING:\r\n\t\tcase GET_COLLECTION_SUCCESS:\r\n\t\tcase GET_COLLECTION_ERROR:\r\n\t\t\treturn { ...state, ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn action;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}