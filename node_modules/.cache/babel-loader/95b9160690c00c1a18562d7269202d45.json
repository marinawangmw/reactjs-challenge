{"ast":null,"code":"import _taggedTemplateLiteral from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _queries,_initialData;function _templateObject(){var data=_taggedTemplateLiteral([\"\\n\\t\\t\",\"\\n\\t\"]);_templateObject=function _templateObject(){return data;};return data;}import ApolloClient,{gql}from\"apollo-boost\";import{CLEAR_COLLECTION,CLEAR_ERROR,CLEAR_INPUT,Filter,GET_COLLECTION_ERROR,GET_COLLECTION_PENDING,GET_COLLECTION_SUCCESS,SET_CURRENT_PAGE,SET_FILTER,SET_NAME,SET_TOTAL_PAGES,SET_TYPE}from\"./reduxTypes\";var client=new ApolloClient({uri:\"https://rickandmortyapi.com/graphql\"});// GraphQL Queries\nvar queries=(_queries={},_defineProperty(_queries,Filter.characters,\"\\n        query($name:String,$type:String, $page:Int) {\\n            characters(page:$page,filter:{name:$name, type:$type}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    type\\n                    species\\n                    gender\\n                    image\\n                }\\n            }\\n        }\"),_defineProperty(_queries,Filter.locations,\"\\n        query($name:String,$type:String, $page:Int) {\\n            locations(page:$page,filter:{name:$name, type:$type}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    dimension\\n                    residents{\\n                        name\\n                        image\\n                    }\\n                }\\n            }\\n        }\"),_defineProperty(_queries,Filter.episodes,\"\\n        query($name:String, $page:Int) {\\n            episodes(page:$page,filter:{name:$name}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    air_date\\n                    episode\\n                    characters{\\n                    name\\n                    image\\n                    }\\n                }\\n            }\\n        }\"),_queries);// STATES\nvar initialFilterState={collection:[],inputType:\"\",inputName:\"\",fetching:false,error:false,page:1,totalPages:0};var initialData=(_initialData={activeFilter:Filter.characters},_defineProperty(_initialData,Filter.characters,_objectSpread(_objectSpread({},initialFilterState),{},{filterQuery:queries.characters})),_defineProperty(_initialData,Filter.locations,_objectSpread(_objectSpread({},initialFilterState),{},{filterQuery:queries.locations})),_defineProperty(_initialData,Filter.episodes,_objectSpread(_objectSpread({},initialFilterState),{},{filterQuery:queries.episodes})),_initialData);// REDUCER\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialData;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_FILTER:case SET_NAME:case SET_TYPE:case CLEAR_INPUT:case CLEAR_COLLECTION:case CLEAR_ERROR:case SET_TOTAL_PAGES:case SET_CURRENT_PAGE:case GET_COLLECTION_PENDING:case GET_COLLECTION_SUCCESS:case GET_COLLECTION_ERROR:return _objectSpread(_objectSpread({},state),action.payload);default:return action;}};// ACTIONS\nexport var setFilterAction=function setFilterAction(filter){return function(dispatch,getState){dispatch({type:SET_FILTER,payload:_defineProperty({activeFilter:filter},filter,_objectSpread(_objectSpread({},getState().searcher[filter]),{},{filterQuery:queries[filter]}))});};};export var setInputNameAction=function setInputNameAction(inputName){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:SET_NAME,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{inputName:inputName}))});};};export var setInputTypeAction=function setInputTypeAction(inputType){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:SET_TYPE,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{inputType:inputType}))});};};export var clearInputAction=function clearInputAction(){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:CLEAR_INPUT,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{inputName:\"\",inputType:\"\"}))});};};export var clearCollectionAction=function clearCollectionAction(){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:CLEAR_COLLECTION,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{collection:[]}))});dispatch(clearErrorAction());};};export var clearErrorAction=function clearErrorAction(){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:CLEAR_ERROR,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{error:false,fetching:false}))});};};export var setPageAction=function setPageAction(page){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:SET_CURRENT_PAGE,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{page:page}))});};};export var setTotalPagesAction=function setTotalPagesAction(pages){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var activeFilterState=getState().searcher[activeFilter];dispatch({type:SET_TOTAL_PAGES,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{fetching:false,totalPages:pages}))});};};export var getCollectionAction=function getCollectionAction(){return function(dispatch,getState){var activeFilter=getState().searcher.activeFilter;var _getState$searcher$ac=getState().searcher[activeFilter],filterQuery=_getState$searcher$ac.filterQuery,page=_getState$searcher$ac.page,inputName=_getState$searcher$ac.inputName,inputType=_getState$searcher$ac.inputType;var activeFilterState=getState().searcher[activeFilter];var query=gql(_templateObject(),filterQuery);dispatch({type:GET_COLLECTION_PENDING,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{fetching:true}))});return client.query({query:query,variables:{name:inputName?inputName.toLowerCase():\"\",type:inputType?inputType.toLowerCase():\"\",page:page?page:1}}).then(function(_ref){var data=_ref.data;dispatch({type:GET_COLLECTION_SUCCESS,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{fetching:false,collection:data[activeFilter].results}))});dispatch(setTotalPagesAction(data[activeFilter].info.pages));}).catch(function(error){dispatch({type:GET_COLLECTION_ERROR,payload:_defineProperty({},activeFilter,_objectSpread(_objectSpread({},activeFilterState),{},{error:true}))});});};};export default reducer;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/redux/searcherDuck.ts"],"names":["ApolloClient","gql","CLEAR_COLLECTION","CLEAR_ERROR","CLEAR_INPUT","Filter","GET_COLLECTION_ERROR","GET_COLLECTION_PENDING","GET_COLLECTION_SUCCESS","SET_CURRENT_PAGE","SET_FILTER","SET_NAME","SET_TOTAL_PAGES","SET_TYPE","client","uri","queries","characters","locations","episodes","initialFilterState","collection","inputType","inputName","fetching","error","page","totalPages","initialData","activeFilter","filterQuery","reducer","state","action","type","payload","setFilterAction","filter","dispatch","getState","searcher","setInputNameAction","activeFilterState","setInputTypeAction","clearInputAction","clearCollectionAction","clearErrorAction","setPageAction","setTotalPagesAction","pages","getCollectionAction","query","variables","name","toLowerCase","then","data","results","info","catch"],"mappings":"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","sourcesContent":["import ApolloClient, { gql } from \"apollo-boost\";\r\nimport { Reducer } from \"redux\";\r\nimport {\r\n\tAppThunk,\r\n\tCLEAR_COLLECTION,\r\n\tCLEAR_ERROR,\r\n\tCLEAR_INPUT,\r\n\tFilter,\r\n\tFilterState,\r\n\tGET_COLLECTION_ERROR,\r\n\tGET_COLLECTION_PENDING,\r\n\tGET_COLLECTION_SUCCESS,\r\n\tSearcherState,\r\n\tSET_CURRENT_PAGE,\r\n\tSET_FILTER,\r\n\tSET_NAME,\r\n\tSET_TOTAL_PAGES,\r\n\tSET_TYPE,\r\n} from \"./reduxTypes\";\r\n\r\nlet client = new ApolloClient({\r\n\turi: \"https://rickandmortyapi.com/graphql\",\r\n});\r\n\r\n// GraphQL Queries\r\nconst queries = {\r\n\t[Filter.characters]: `\r\n        query($name:String,$type:String, $page:Int) {\r\n            characters(page:$page,filter:{name:$name, type:$type}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    type\r\n                    species\r\n                    gender\r\n                    image\r\n                }\r\n            }\r\n        }`,\r\n\r\n\t[Filter.locations]: `\r\n        query($name:String,$type:String, $page:Int) {\r\n            locations(page:$page,filter:{name:$name, type:$type}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    dimension\r\n                    residents{\r\n                        name\r\n                        image\r\n                    }\r\n                }\r\n            }\r\n        }`,\r\n\r\n\t[Filter.episodes]: `\r\n        query($name:String, $page:Int) {\r\n            episodes(page:$page,filter:{name:$name}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    air_date\r\n                    episode\r\n                    characters{\r\n                    name\r\n                    image\r\n                    }\r\n                }\r\n            }\r\n        }`,\r\n};\r\n\r\n// STATES\r\nconst initialFilterState: FilterState = {\r\n\tcollection: [],\r\n\tinputType: \"\",\r\n\tinputName: \"\",\r\n\tfetching: false,\r\n\terror: false,\r\n\tpage: 1,\r\n\ttotalPages: 0,\r\n};\r\n\r\nconst initialData: SearcherState = {\r\n\tactiveFilter: Filter.characters,\r\n\t[Filter.characters]: {\r\n\t\t...initialFilterState,\r\n\t\tfilterQuery: queries.characters,\r\n\t},\r\n\t[Filter.locations]: {\r\n\t\t...initialFilterState,\r\n\t\tfilterQuery: queries.locations,\r\n\t},\r\n\t[Filter.episodes]: {\r\n\t\t...initialFilterState,\r\n\t\tfilterQuery: queries.episodes,\r\n\t},\r\n};\r\n\r\n// REDUCER\r\nconst reducer: Reducer<SearcherState> = (state = initialData, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_FILTER:\r\n\t\tcase SET_NAME:\r\n\t\tcase SET_TYPE:\r\n\t\tcase CLEAR_INPUT:\r\n\t\tcase CLEAR_COLLECTION:\r\n\t\tcase CLEAR_ERROR:\r\n\t\tcase SET_TOTAL_PAGES:\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\tcase GET_COLLECTION_PENDING:\r\n\t\tcase GET_COLLECTION_SUCCESS:\r\n\t\tcase GET_COLLECTION_ERROR:\r\n\t\t\treturn { ...state, ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn action;\r\n\t}\r\n};\r\n\r\n// ACTIONS\r\nexport const setFilterAction: AppThunk = (filter: Filter) => (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\tdispatch({\r\n\t\ttype: SET_FILTER,\r\n\t\tpayload: {\r\n\t\t\tactiveFilter: filter,\r\n\t\t\t[filter]: {\r\n\t\t\t\t...getState().searcher[filter],\r\n\t\t\t\tfilterQuery: queries[filter],\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const setInputNameAction: AppThunk = (inputName: string) => (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: SET_NAME,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tinputName,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const setInputTypeAction: AppThunk = (inputType: string) => (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: SET_TYPE,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tinputType,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const clearInputAction: AppThunk = () => (dispatch, getState) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: CLEAR_INPUT,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tinputName: \"\",\r\n\t\t\t\tinputType: \"\",\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const clearCollectionAction: AppThunk = () => (dispatch, getState) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: CLEAR_COLLECTION,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tcollection: [],\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\r\n\tdispatch(clearErrorAction());\r\n};\r\n\r\nexport const clearErrorAction: AppThunk = () => (dispatch, getState) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: CLEAR_ERROR,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\terror: false,\r\n\t\t\t\tfetching: false,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const setPageAction: AppThunk = (page: number) => (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: SET_CURRENT_PAGE,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tpage,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const setTotalPagesAction: AppThunk = (pages: number) => (\r\n\tdispatch,\r\n\tgetState\r\n) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\tdispatch({\r\n\t\ttype: SET_TOTAL_PAGES,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tfetching: false,\r\n\t\t\t\ttotalPages: pages,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport const getCollectionAction: AppThunk = () => (dispatch, getState) => {\r\n\tconst { activeFilter } = getState().searcher;\r\n\tconst { filterQuery, page, inputName, inputType } = getState().searcher[\r\n\t\tactiveFilter\r\n\t];\r\n\tconst activeFilterState = getState().searcher[activeFilter];\r\n\r\n\tconst query = gql`\r\n\t\t${filterQuery}\r\n\t`;\r\n\r\n\tdispatch({\r\n\t\ttype: GET_COLLECTION_PENDING,\r\n\t\tpayload: {\r\n\t\t\t[activeFilter]: {\r\n\t\t\t\t...activeFilterState,\r\n\t\t\t\tfetching: true,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\r\n\treturn client\r\n\t\t.query({\r\n\t\t\tquery,\r\n\t\t\tvariables: {\r\n\t\t\t\tname: inputName ? inputName.toLowerCase() : \"\",\r\n\t\t\t\ttype: inputType ? inputType.toLowerCase() : \"\",\r\n\t\t\t\tpage: page ? page : 1,\r\n\t\t\t},\r\n\t\t})\r\n\t\t.then(({ data }) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_COLLECTION_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t[activeFilter]: {\r\n\t\t\t\t\t\t...activeFilterState,\r\n\t\t\t\t\t\tfetching: false,\r\n\t\t\t\t\t\tcollection: data[activeFilter!].results,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tdispatch(setTotalPagesAction(data[activeFilter!].info.pages));\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_COLLECTION_ERROR,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t[activeFilter]: {\r\n\t\t\t\t\t\t...activeFilterState,\r\n\t\t\t\t\t\terror: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}