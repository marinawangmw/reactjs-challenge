{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\src\\\\components\\\\cardItem\\\\CardItem.tsx\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport ModalDetails from '../modalDetails/ModalDetails';\nimport './CardItem.css';\n\nconst CardItem = ({\n  item,\n  small\n}) => {\n  const {\n    name,\n    image,\n    dimension,\n    episode\n  } = item;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    if (!small) {\n      setOpen(true);\n      return;\n    }\n\n    ;\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${small ? 'card__withoutAnimation' : ''} 'card'`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card__card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `${small && 'small'} \"card__withImage\"`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card__img\",\n    src: image,\n    alt: \"foto card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"cardwithImage__p\",\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, name)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card__noImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, dimension ? dimension : episode && episode)))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalDetails, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CardItem;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/components/cardItem/CardItem.tsx"],"names":["React","Card","CardContent","Typography","Modal","ModalDetails","CardItem","item","small","name","image","dimension","episode","open","setOpen","useState","handleOpen","handleClose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,gBAAP;;AAOA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC3D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAsCL,IAA5C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAG,CAACR,KAAJ,EAAU;AACNM,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACH;;AAAA;AACF,GALH;;AAOA,QAAMG,WAAW,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEN,KAAK,GAAE,wBAAF,GAA4B,EAAG,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEQ,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEAN,KAAK,gBACD;AAAK,IAAA,SAAS,EAAG,GAAEF,KAAK,IAAI,OAAQ,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEE,KAAhC;AAAuC,IAAA,GAAG,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,kBAAtB;AAAyC,IAAA,OAAO,EAAC,OAAjD;AAAyD,IAAA,SAAS,EAAC,GAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CAFJ,CADC,gBAQD;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IADL,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIE,SAAS,GAAEA,SAAF,GACTC,OAAO,IAAIA,OAFf,CAJJ,CAVJ,CADJ,CADJ,eA0BI,oBAAC,KAAD;AACA,IAAA,IAAI,EAAEC,IADN;AAEA,IAAA,OAAO,EAAEI,WAFT;AAGA,uBAAgB,oBAHhB;AAIA,wBAAiB,0BAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEV,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CA1BJ,CADJ;AAqCH,CApDD;;AAsDA,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport ModalDetails from '../modalDetails/ModalDetails';\r\nimport { ResultData } from '../../redux/reduxTypes';\r\nimport './CardItem.css';\r\n\r\ninterface CardItemProps {\r\n    item: ResultData;\r\n    small: boolean;\r\n}\r\n\r\nconst CardItem: React.FC<CardItemProps> = ({ item, small }) => {\r\n    const { name, image, dimension, episode } = item;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        if(!small){\r\n            setOpen(true)\r\n            return\r\n        };\r\n      };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={`${small? 'card__withoutAnimation': ''} 'card'`}> \r\n            <Card className=\"card__card\">\r\n                <CardContent onClick={handleOpen}>\r\n                {\r\n                image?\r\n                    <div className={`${small && 'small'} \"card__withImage\"`}>\r\n                        <img className=\"card__img\" src={image} alt=\"foto card\"/>\r\n                        <Typography className=\"cardwithImage__p\" variant=\"body2\" component=\"p\">\r\n                            {name}\r\n                        </Typography>\r\n                    </div>\r\n                :  \r\n                    <div className=\"card__noImage\">\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                           {dimension? dimension \r\n                           :episode && episode}\r\n                        </Typography>\r\n                    </div>\r\n                }\r\n                \r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <ModalDetails item={item}/>\r\n            </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardItem;"]},"metadata":{},"sourceType":"module"}