{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\src\\\\components\\\\cardItem\\\\CardItem.tsx\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport ModalDetails from '../modalDetails/ModalDetails';\nimport './CardItem.css';\n\nconst CardItem = ({\n  item,\n  small\n}) => {\n  const {\n    name,\n    image,\n    dimension,\n    episode\n  } = item;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    if (!small) {\n      setOpen(true);\n      return;\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card__card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `${small && 'small'} \"card__withImage\"`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card__img\",\n    src: image,\n    alt: \"foto card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"cardwithImage__p\",\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, name)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card__noImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, dimension ? dimension : episode && episode)))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalDetails, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CardItem;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/components/cardItem/CardItem.tsx"],"names":["Card","CardContent","Modal","Typography","React","ModalDetails","CardItem","item","small","name","image","dimension","episode","open","setOpen","useState","handleOpen","handleClose"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,gBAAP;;AAOA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC7D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAsCL,IAA5C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAI,CAACR,KAAL,EAAY;AACVM,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACD;AACF,GALD;;AAOA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,gBACJ;AAAK,IAAA,SAAS,EAAG,GAAEF,KAAK,IAAI,OAAQ,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEE,KAAhC;AAAuC,IAAA,GAAG,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,SAAS,EAAC,GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,IALH,CAFF,CADI,gBAYJ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,GAAGA,SAAH,GAAeC,OAAO,IAAIA,OADtC,CAJF,CAbJ,CADF,CADF,eA0BE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,OAAO,EAAEI,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEV,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CA1BF,CADF;AAqCD,CApDD;;AAsDA,eAAeD,QAAf","sourcesContent":["import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { ResultData } from '../../redux/reduxTypes';\r\nimport ModalDetails from '../modalDetails/ModalDetails';\r\nimport './CardItem.css';\r\n\r\ninterface CardItemProps {\r\n  item: ResultData;\r\n  small: boolean;\r\n}\r\n\r\nconst CardItem: React.FC<CardItemProps> = ({ item, small }) => {\r\n  const { name, image, dimension, episode } = item;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    if (!small) {\r\n      setOpen(true);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Card className=\"card__card\">\r\n        <CardContent onClick={handleOpen}>\r\n          {image ? (\r\n            <div className={`${small && 'small'} \"card__withImage\"`}>\r\n              <img className=\"card__img\" src={image} alt=\"foto card\" />\r\n              <Typography\r\n                className=\"cardwithImage__p\"\r\n                variant=\"body2\"\r\n                component=\"p\"\r\n              >\r\n                {name}\r\n              </Typography>\r\n            </div>\r\n          ) : (\r\n            <div className=\"card__noImage\">\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {dimension ? dimension : episode && episode}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <ModalDetails item={item} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n"]},"metadata":{},"sourceType":"module"}