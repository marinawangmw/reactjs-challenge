{"ast":null,"code":"export let Filter;\n\n(function (Filter) {\n  Filter[\"characters\"] = \"characters\";\n  Filter[\"locations\"] = \"locations\";\n  Filter[\"episodes\"] = \"episodes\";\n})(Filter || (Filter = {}));\n\n// CONSTANTS\nexport const SET_FILTER = \"SET_FILTER\";\nexport const SET_NAME = \"SET_NAME\";\nexport const SET_TYPE = \"SET_TYPE\";\nexport const CLEAR_INPUT = \"CLEAR_INPUT\";\nexport const CLEAR_COLLECTION = \"CLEAR_COLLECTION\";\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\";\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nexport const GET_COLLECTION_PENDING = \"GET_COLLECTION_PENDING\";\nexport const GET_COLLECTION_SUCCESS = \"GET_COLLECTION_SUCCESS\";\nexport const GET_COLLECTION_ERROR = \"GET_COLLECTION_ERROR\"; // ACTIONS TYPE","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/redux/reduxTypes.ts"],"names":["Filter","SET_FILTER","SET_NAME","SET_TYPE","CLEAR_INPUT","CLEAR_COLLECTION","CLEAR_ERROR","SET_TOTAL_PAGES","SET_CURRENT_PAGE","GET_COLLECTION_PENDING","GET_COLLECTION_SUCCESS","GET_COLLECTION_ERROR"],"mappings":"AAIA,WAAYA,MAAZ;;WAAYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AAmDZ;AACA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B,C,CAEP","sourcesContent":["import { Action, ActionCreator } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport enum Filter {\r\n\tcharacters = \"characters\",\r\n\tlocations = \"locations\",\r\n\tepisodes = \"episodes\",\r\n}\r\n\r\nexport interface Characters {\r\n\tid?: number;\r\n\tname: string;\r\n\ttype?: string;\r\n\tspecies?: string;\r\n\tgender?: string;\r\n\timage: string;\r\n}\r\n\r\nexport interface Locations {\r\n\tid: number;\r\n\tname: string;\r\n\ttype: string;\r\n\tdimension: string;\r\n\tresidents: { name: string; image: string }[];\r\n}\r\n\r\nexport interface Episodes {\r\n\tid: number;\r\n\tname: string;\r\n\tair_date: Date;\r\n\tepisode: string;\r\n\tcharacters: { name: string; image: string }[];\r\n}\r\n\r\nexport type Data = Characters | Locations | Episodes;\r\n\r\nexport interface FilterState {\r\n\tfilterQuery?: string;\r\n\tcollection?: Data[];\r\n\tinputType?: string;\r\n\tinputName?: string;\r\n\tfetching?: boolean;\r\n\terror?: boolean;\r\n\tpage?: number;\r\n\ttotalPages?: number;\r\n}\r\n\r\nexport interface SearcherState {\r\n\tactiveFilter: Filter;\r\n\t[Filter.characters]: FilterState;\r\n\t[Filter.locations]: FilterState;\r\n\t[Filter.episodes]: FilterState;\r\n}\r\n\r\n// CONSTANTS\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const SET_NAME = \"SET_NAME\";\r\nexport const SET_TYPE = \"SET_TYPE\";\r\nexport const CLEAR_INPUT = \"CLEAR_INPUT\";\r\nexport const CLEAR_COLLECTION = \"CLEAR_COLLECTION\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\nexport const SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const GET_COLLECTION_PENDING = \"GET_COLLECTION_PENDING\";\r\nexport const GET_COLLECTION_SUCCESS = \"GET_COLLECTION_SUCCESS\";\r\nexport const GET_COLLECTION_ERROR = \"GET_COLLECTION_ERROR\";\r\n\r\n// ACTIONS TYPE\r\ninterface SetFilterAction {\r\n\ttype: typeof SET_FILTER;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface SetInputAction {\r\n\ttype: typeof SET_NAME | typeof SET_TYPE;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface ClearStateAction {\r\n\ttype: typeof CLEAR_INPUT | typeof CLEAR_COLLECTION | typeof CLEAR_ERROR;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface PaginatorAction {\r\n\ttype: typeof SET_TOTAL_PAGES | typeof SET_CURRENT_PAGE;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface GetDataActionSuccess {\r\n\ttype: typeof GET_COLLECTION_SUCCESS;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface GetDataActionPendingOrError {\r\n\ttype: typeof GET_COLLECTION_PENDING | typeof GET_COLLECTION_ERROR;\r\n\tpayload: FilterState;\r\n}\r\n\r\nexport type SearcherActionTypes =\r\n\t| SetFilterAction\r\n\t| SetInputAction\r\n\t| ClearStateAction\r\n\t| PaginatorAction\r\n\t| GetDataActionSuccess\r\n\t| GetDataActionPendingOrError;\r\n\r\nexport type AppThunk = ActionCreator<\r\n\tThunkAction<void, RootState, null, Action<string>>\r\n>;\r\n"]},"metadata":{},"sourceType":"module"}