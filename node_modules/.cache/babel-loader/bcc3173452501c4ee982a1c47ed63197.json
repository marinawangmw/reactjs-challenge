{"ast":null,"code":"import _defineProperty from\"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _queries;import ApolloClient from\"apollo-boost\";import{Filter}from\"../redux/searcher/searcher.types\";export var client=new ApolloClient({uri:\"https://rickandmortyapi.com/graphql\"});export var queries=(_queries={},_defineProperty(_queries,Filter.characters,\"\\n        query($name:String,$type:String, $page:Int) {\\n            characters(page:$page,filter:{name:$name, type:$type}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    type\\n                    species\\n                    gender\\n                    image\\n                }\\n            }\\n        }\"),_defineProperty(_queries,Filter.locations,\"\\n        query($name:String,$type:String, $page:Int) {\\n            locations(page:$page,filter:{name:$name, type:$type}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    dimension\\n                    residents{\\n                        name\\n                        image\\n                    }\\n                }\\n            }\\n        }\"),_defineProperty(_queries,Filter.episodes,\"\\n        query($name:String, $page:Int) {\\n            episodes(page:$page,filter:{name:$name}){\\n                info{\\n                    pages\\n                }\\n                results{\\n                    id\\n                    name\\n                    air_date\\n                    episode\\n                    characters{\\n                    name\\n                    image\\n                    }\\n                }\\n            }\\n        }\"),_queries);","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/services/apollo.ts"],"names":["ApolloClient","Filter","client","uri","queries","characters","locations","episodes"],"mappings":"gMAAA,MAAOA,CAAAA,YAAP,KAAyB,cAAzB,CACA,OAASC,MAAT,KAAuB,kCAAvB,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,GAAIF,CAAAA,YAAJ,CAAiB,CACtCG,GAAG,CAAE,qCADiC,CAAjB,CAAf,CAIP,MAAO,IAAMC,CAAAA,OAAO,uCAClBH,MAAM,CAACI,UADW,scAkBlBJ,MAAM,CAACK,SAlBW,0eAoClBL,MAAM,CAACM,QApCW,qdAAb","sourcesContent":["import ApolloClient from \"apollo-boost\";\r\nimport { Filter } from \"../redux/searcher/searcher.types\";\r\n\r\nexport const client = new ApolloClient({\r\n\turi: \"https://rickandmortyapi.com/graphql\",\r\n});\r\n\r\nexport const queries = {\r\n\t[Filter.characters]: `\r\n        query($name:String,$type:String, $page:Int) {\r\n            characters(page:$page,filter:{name:$name, type:$type}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    type\r\n                    species\r\n                    gender\r\n                    image\r\n                }\r\n            }\r\n        }`,\r\n\r\n\t[Filter.locations]: `\r\n        query($name:String,$type:String, $page:Int) {\r\n            locations(page:$page,filter:{name:$name, type:$type}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    dimension\r\n                    residents{\r\n                        name\r\n                        image\r\n                    }\r\n                }\r\n            }\r\n        }`,\r\n\r\n\t[Filter.episodes]: `\r\n        query($name:String, $page:Int) {\r\n            episodes(page:$page,filter:{name:$name}){\r\n                info{\r\n                    pages\r\n                }\r\n                results{\r\n                    id\r\n                    name\r\n                    air_date\r\n                    episode\r\n                    characters{\r\n                    name\r\n                    image\r\n                    }\r\n                }\r\n            }\r\n        }`,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}