{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Workspace\\\\Puzzle\\\\reactjs-challenge-marina\\\\src\\\\components\\\\paginator\\\\Paginator.tsx\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCollectionAction, setPageAction } from '../../redux/searcherDuck';\n\nconst Paginator = () => {\n  const totalPages = useSelector(state => state.searcher.totalPages);\n  const currentPage = useSelector(state => state.searcher.page);\n  const dispatch = useDispatch();\n\n  const handleChangePage = (event, value) => {\n    dispatch(setPageAction(value));\n    dispatch(getCollectionAction());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paginator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    page: currentPage ? currentPage : 1,\n    count: totalPages,\n    shape: \"rounded\",\n    size: \"large\",\n    onChange: handleChangePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/components/paginator/Paginator.tsx"],"names":["Pagination","React","useDispatch","useSelector","getCollectionAction","setPageAction","Paginator","totalPages","state","searcher","currentPage","page","dispatch","handleChangePage","event","value"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,0BAAnD;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,UAAU,GAAGJ,WAAW,CACzBK,KAAD,IAAsBA,KAAK,CAACC,QAAN,CAAeF,UADX,CAA9B;AAIA,QAAMG,WAAW,GAAGP,WAAW,CAC1BK,KAAD,IAAsBA,KAAK,CAACC,QAAN,CAAeE,IADV,CAA/B;AAIA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,KAAD,EAAaC,KAAb,KAA+B;AACpDH,IAAAA,QAAQ,CAACP,aAAa,CAACU,KAAD,CAAd,CAAR;AACAH,IAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEM,WAAW,GAAEA,WAAF,GAAe,CAA5C;AAA+C,IAAA,KAAK,EAAEH,UAAtD;AAAkE,IAAA,KAAK,EAAC,SAAxE;AAAkF,IAAA,IAAI,EAAC,OAAvF;AAA+F,IAAA,QAAQ,EAAEM,gBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CArBD;;AAuBA,eAAeP,SAAf","sourcesContent":["import Pagination from '@material-ui/lab/Pagination';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCollectionAction, setPageAction } from '../../redux/searcherDuck';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst Paginator = () => {\r\n    const totalPages = useSelector(\r\n        (state: RootState) => state.searcher.totalPages\r\n    )\r\n\r\n    const currentPage = useSelector(\r\n        (state: RootState) => state.searcher.page\r\n    )\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleChangePage = (event: any, value: number) => {\r\n        dispatch(setPageAction(value));\r\n        dispatch(getCollectionAction())\r\n    }\r\n\r\n    return (\r\n        <div className='paginator'>\r\n            <Pagination page={currentPage? currentPage: 1} count={totalPages} shape=\"rounded\" size=\"large\" onChange={handleChangePage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}