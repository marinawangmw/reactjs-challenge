{"ast":null,"code":"export var Filter;(function(Filter){Filter[\"characters\"]=\"characters\";Filter[\"locations\"]=\"locations\";Filter[\"episodes\"]=\"episodes\";})(Filter||(Filter={}));// CONSTANTS\nexport var SET_FILTER=\"SET_FILTER\";export var SET_NAME=\"SET_NAME\";export var SET_TYPE=\"SET_TYPE\";export var CLEAR_INPUT=\"CLEAR_INPUT\";export var CLEAR_COLLECTION=\"CLEAR_COLLECTION\";export var CLEAR_ERROR=\"CLEAR_ERROR\";export var SET_TOTAL_PAGES=\"SET_TOTAL_PAGES\";export var SET_CURRENT_PAGE=\"SET_CURRENT_PAGE\";export var GET_COLLECTION_PENDING=\"GET_COLLECTION_PENDING\";export var GET_COLLECTION_SUCCESS=\"GET_COLLECTION_SUCCESS\";export var GET_COLLECTION_ERROR=\"GET_COLLECTION_ERROR\";// ACTIONS TYPE","map":{"version":3,"sources":["D:/React-Workspace/Puzzle/reactjs-challenge-marina/src/redux/searcher/searcher.types.ts"],"names":["Filter","SET_FILTER","SET_NAME","SET_TYPE","CLEAR_INPUT","CLEAR_COLLECTION","CLEAR_ERROR","SET_TOTAL_PAGES","SET_CURRENT_PAGE","GET_COLLECTION_PENDING","GET_COLLECTION_SUCCESS","GET_COLLECTION_ERROR"],"mappings":"AAIA,UAAYA,CAAAA,MAAZ,C,UAAYA,M,EAAAA,M,4BAAAA,M,0BAAAA,M,2BAAAA,M,GAAAA,M,MAmDZ;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,YAAnB,CACP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,UAAjB,CACP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,UAAjB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,wBAA/B,CACP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,wBAA/B,CACP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CAEP","sourcesContent":["import { Action, ActionCreator } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"../root-reducer\";\r\n\r\nexport enum Filter {\r\n\tcharacters = \"characters\",\r\n\tlocations = \"locations\",\r\n\tepisodes = \"episodes\",\r\n}\r\n\r\nexport interface Characters {\r\n\tid?: number;\r\n\tname: string;\r\n\ttype?: string;\r\n\tspecies?: string;\r\n\tgender?: string;\r\n\timage: string;\r\n}\r\n\r\nexport interface Locations {\r\n\tid: number;\r\n\tname: string;\r\n\ttype: string;\r\n\tdimension: string;\r\n\tresidents: { name: string; image: string }[];\r\n}\r\n\r\nexport interface Episodes {\r\n\tid: number;\r\n\tname: string;\r\n\tair_date: Date;\r\n\tepisode: string;\r\n\tcharacters: { name: string; image: string }[];\r\n}\r\n\r\nexport type Data = Characters | Locations | Episodes;\r\n\r\nexport interface FilterState {\r\n\tfilterQuery?: string;\r\n\tcollection?: Data[];\r\n\tinputType: string;\r\n\tinputName: string;\r\n\tfetching?: boolean;\r\n\terror?: boolean;\r\n\tpage?: number;\r\n\ttotalPages?: number;\r\n}\r\n\r\nexport interface SearcherState {\r\n\tactiveFilter: Filter;\r\n\t[Filter.characters]: FilterState;\r\n\t[Filter.locations]: FilterState;\r\n\t[Filter.episodes]: FilterState;\r\n}\r\n\r\n// CONSTANTS\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const SET_NAME = \"SET_NAME\";\r\nexport const SET_TYPE = \"SET_TYPE\";\r\nexport const CLEAR_INPUT = \"CLEAR_INPUT\";\r\nexport const CLEAR_COLLECTION = \"CLEAR_COLLECTION\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\nexport const SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const GET_COLLECTION_PENDING = \"GET_COLLECTION_PENDING\";\r\nexport const GET_COLLECTION_SUCCESS = \"GET_COLLECTION_SUCCESS\";\r\nexport const GET_COLLECTION_ERROR = \"GET_COLLECTION_ERROR\";\r\n\r\n// ACTIONS TYPE\r\ninterface SetFilterAction {\r\n\ttype: typeof SET_FILTER;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface SetInputAction {\r\n\ttype: typeof SET_NAME | typeof SET_TYPE;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface ClearStateAction {\r\n\ttype: typeof CLEAR_INPUT | typeof CLEAR_COLLECTION | typeof CLEAR_ERROR;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface PaginatorAction {\r\n\ttype: typeof SET_TOTAL_PAGES | typeof SET_CURRENT_PAGE;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface GetDataActionSuccess {\r\n\ttype: typeof GET_COLLECTION_SUCCESS;\r\n\tpayload: FilterState;\r\n}\r\n\r\ninterface GetDataActionPendingOrError {\r\n\ttype: typeof GET_COLLECTION_PENDING | typeof GET_COLLECTION_ERROR;\r\n\tpayload: FilterState;\r\n}\r\n\r\nexport type SearcherActionTypes =\r\n\t| SetFilterAction\r\n\t| SetInputAction\r\n\t| ClearStateAction\r\n\t| PaginatorAction\r\n\t| GetDataActionSuccess\r\n\t| GetDataActionPendingOrError;\r\n\r\nexport type AppThunk = ActionCreator<\r\n\tThunkAction<void, RootState, null, Action<string>>\r\n>;\r\n"]},"metadata":{},"sourceType":"module"}